{"ast":null,"code":"var _jsxFileName = \"E:\\\\micro-college-test-portal\\\\client\\\\src\\\\components\\\\questions.js\";\n// import React, { useEffect, useState } from 'react';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import img from \"./micro-logo.png\";\n// import './add.css';\n// import { Link } from 'react-router-dom';\n// export default function Questions() {\n\n//     const [question,setQuestion]=useState([])\n//     const [score, setscore] = useState(0);\n//     const [CurrentQuestion, setCurrentQuestion] = useState(0);\n//     const optionClick = (isCorrect) => {\n//                 console.log(isCorrect);\n//                 if (isCorrect) {\n//                     setscore(score + 35);\n//     }\n//     }      \n//     useEffect(()=>{\n//         fetch(\"http://localhost:3000/questions.json\")\n//         .then(response=>response.json())\n//         .then(json=>setQuestion(json))\n//     })\n//     return (\n//         <>\n//             <div className='container-fluid mt-3'>\n//                 <div className='row'>\n//                     <div className='col-lg-3'>\n//                         <img src={img} className='col-lg-12' />\n//                     </div>\n//                     <div className='col-lg-5'></div>\n//                     <div className='col-lg-4'></div>\n//                 </div>\n//                 <div className='row'>\n//                     <div className='col-lg-3'></div>\n//                     <div className='col-lg-6 text-center mt-3 bg-light p-2'>\n//                         <h1>KGM Admission Test</h1>\n//                     </div>\n//                     <div className='col-lg-3'></div>\n//                 </div>\n//                 <div className='container mt-4'>\n//                     {\n//                         question.map((value,index)=>{\n//                             return (\n//                                 <div className='row'>\n//                                     <div className='col-lg-12 mt-5'>\n//                                         <h5>{value.text}</h5>\n//                                         <div className='row'>\n//                                             <input type=\"radio\" className='check' /> \n//                                             <p className='mt-3 ml-2'>{value.options.answer1}</p> \n//                                         </div>\n//                                         <div className='row'>\n//                                         <input type=\"radio\" className='check'/>\n//                                         <p className='mt-3 ml-2'>{value.options.answer2}</p>\n//                                         </div>\n//                                         <div className='row'>\n//                                         <input type=\"radio\" className='check'/>\n//                                         <p className='mt-3 ml-2'>{value.options.answer3}</p>\n//                                         </div>\n//                                         <div className='row'>\n//                                         <input type=\"radio\" className='check'/>\n//                                         <p className='mt-3 ml-2'>{value.options.answer4}</p>\n//                                         </div>\n//                                         <li onClick={() => optionClick(value.options.isCorrect)} key={value.options.id}>{value.options.text}</li>\n//                                     </div>\n//                                     {/* <div className='question'>\n//                                         <h3>Question {CurrentQuestion + 1} out of {question.length} </h3>\n//                                         <h1 className='question-text mt-3'>{question[CurrentQuestion].text}</h1>\n\n//                                         <ul>\n//                                             {question[CurrentQuestion].options.map((options) => {\n//                                                 return (\n\n//                                                         <li onClick={() => optionClick(options.isCorrect)} key={options.id}>{options.text}</li>\n\n//                                                 )\n//                                             })}\n//                                         </ul>\n\n//                                     </div> */}\n//                                 </div>\n//                             );\n//                         })\n\n//                     }\n//                     <div className='row'>\n//                         <div className='col-lg-10'></div>\n//                         <div className='col-lg-2'>\n//                             <button type='submit' className='btn btn-danger col-lg-12' value='submit' name='submit'>Submit</button>\n//                         </div>\n//                     </div>\n//                 </div>\n\n//             </div>\n//         </>\n//     );\n// }\n// // import React, { useState } from 'react';\n// // import 'bootstrap/dist/css/bootstrap.min.css';\n// // import './add.css';\n// // import img from \"./micro-logo.png\";\n\n// // export default function Question() {\n\n// //     const [showFinalResult, setFinalResult] = useState(false);\n// //     const [score, setscore] = useState(0);\n// //     const [CurrentQuestion, setCurrentQuestion] = useState(0);\n\n// //     const Question = [\n// //         {\n// //             text: \" What is the capital of India\",\n// //             options: [\n// //                 { id: 0, text: \"Chennai\", isCorrect: false },\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\n// //                 { id: 0, text: \"Suret\", isCorrect: false },\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\n// //             ],\n// //         },\n// //         {\n// //             text: \" What is the capital of southi\",\n// //             options: [\n// //                 { id: 0, text: \"1253\", isCorrect: false },\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\n// //                 { id: 0, text: \"4586\", isCorrect: false },\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\n// //             ],\n// //         },\n// //         {\n// //             text: \" What is the capital of Tamil Nadu\",\n// //             options: [\n// //                 { id: 0, text: \"Chennai\", isCorrect: false },\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\n// //                 { id: 0, text: \"Suret\", isCorrect: false },\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\n// //             ],\n// //         },\n// //         {\n// //             text: \" What is the capital of Kerala\",\n// //             options: [\n// //                 { id: 0, text: \"Chennai\", isCorrect: false },\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\n// //                 { id: 0, text: \"Suret\", isCorrect: false },\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\n// //             ],\n// //         },\n// //         {\n// //             text: \" What is the capital of India\",\n// //             options: [\n// //                 { id: 0, text: \"Chennai\", isCorrect: false },\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\n// //                 { id: 0, text: \"Suret\", isCorrect: false },\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\n// //             ],\n// //         },\n// //     ];\n\n// //     const optionClick = (isCorrect) => {\n// //         console.log(isCorrect);\n// //         if (isCorrect) {\n// //             setscore(score + 35);\n// //         }\n\n// //         if (CurrentQuestion + 1 < Question.length) {\n// //             setCurrentQuestion(CurrentQuestion + 1);\n// //         }\n// //         else {\n// //             setFinalResult(true);\n// //         }\n// //     }\n// //     const restaartassesment = () => {\n// //         setscore(0);\n// //         setCurrentQuestion(0);\n// //         setFinalResult(false);\n// //     }\n// //     return (\n// //         <>\n// //         <div className='container-fluid mt-3'>\n// //                 <div className='row'>\n// //                     <div className='col-lg-3'>\n// //                         <img src={img} className='col-lg-12' />\n// //                     </div>\n// //                     <div className='col-lg-5'></div>\n// //                     <div className='col-lg-4'></div>\n// //                 </div>\n// //                 <div className='row'>\n// //                     <div className='col-lg-3'></div>\n// //                     <div className='col-lg-6 text-center mt-3 bg-light p-2'>\n// //                         <h1>KGM Admission Test</h1>\n// //                     </div>\n// //                     <div className='col-lg-3'></div>\n// //                 </div>\n\n// //             <div className='container'>\n// //                 <div className=' App row '>\n// //                     <div className='col-lg-12'>\n// //                         <h2 className='mt-4'>Current Score: {score}</h2>\n\n// //                         {showFinalResult ? (\n\n// //                             <div className='final-result'>\n// //                                 <h1>Final Result</h1>\n// //                                 <h2>{score} out of {Question.length}  correct - ({(score / Question.length) * 100}%)</h2>\n// //                                 <button type='submit' onClick={() => restaartassesment()} className='btn btn-danger'>Restart Assesment</button>\n\n// //                             </div>\n// //                         ) : (\n\n// //                             <div className='question'>\n// //                                 <h3>Question {CurrentQuestion + 1} out of {Question.length} </h3>\n// //                                 <h1 className='question-text mt-3'>{Question[CurrentQuestion].text}</h1>\n\n// //                                 <ul>\n// //                                     {Question[CurrentQuestion].options.map((options) => {\n// //                                         return (\n\n// //                                                 <li onClick={() => optionClick(options.isCorrect)} key={options.id}>{options.text}</li>\n\n// //                                         )\n// //                                     })}\n// //                                 </ul>\n\n// //                             </div>\n\n// //                         )}\n// //                     </div>\n// //                 </div>\n// //             </div>\n// //             </div>\n// //         </>\n// //     )\n// // }\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport questionAPI from './question';\nimport QuestionBox from './components/QuestionBox';\nimport Result from './components/ResultBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Quiz extends Component {\n  constructor() {\n    super();\n    this.getQuestions = () => {\n      questionAPI().then(question => {\n        this.setState({\n          questionBank: question\n        });\n      });\n    };\n    this.playAgain = () => {\n      this.getQuestions();\n      this.setState({\n        score: 0,\n        responses: 0\n      });\n    };\n    this.computeAnswer = (answer, correctAns) => {\n      if (answer === correctAns) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n      this.setState({\n        responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n      });\n    };\n    this.state = {\n      questionBank: [],\n      score: 0,\n      responses: 0\n    };\n  }\n\n  // Function to get question from ./question\n\n  // componentDidMount function to get question\n  componentDidMount() {\n    this.getQuestions();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"QuizOn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }, this), this.state.questionBank.length > 0 && this.state.responses < 5 && this.state.questionBank.map(_ref => {\n        let {\n          question,\n          answers,\n          correct,\n          questionId\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(QuestionBox, {\n          question: question,\n          options: answers,\n          selected: answer => this.computeAnswer(answer, correct)\n        }, questionId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 33\n        }, this);\n      }), this.state.responses === 5 ? /*#__PURE__*/_jsxDEV(Result, {\n        score: this.state.score,\n        playAgain: this.playAgain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 14\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","ReactDOM","questionAPI","QuestionBox","Result","Quiz","constructor","getQuestions","then","question","setState","questionBank","playAgain","score","responses","computeAnswer","answer","correctAns","state","componentDidMount","render","length","map","answers","correct","questionId"],"sources":["E:/micro-college-test-portal/client/src/components/questions.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import img from \"./micro-logo.png\";\r\n// import './add.css';\r\n// import { Link } from 'react-router-dom';\r\n// export default function Questions() {\r\n\r\n//     const [question,setQuestion]=useState([])\r\n//     const [score, setscore] = useState(0);\r\n//     const [CurrentQuestion, setCurrentQuestion] = useState(0);\r\n//     const optionClick = (isCorrect) => {\r\n//                 console.log(isCorrect);\r\n//                 if (isCorrect) {\r\n//                     setscore(score + 35);\r\n//     }\r\n//     }      \r\n//     useEffect(()=>{\r\n//         fetch(\"http://localhost:3000/questions.json\")\r\n//         .then(response=>response.json())\r\n//         .then(json=>setQuestion(json))\r\n//     })\r\n//     return (\r\n//         <>\r\n//             <div className='container-fluid mt-3'>\r\n//                 <div className='row'>\r\n//                     <div className='col-lg-3'>\r\n//                         <img src={img} className='col-lg-12' />\r\n//                     </div>\r\n//                     <div className='col-lg-5'></div>\r\n//                     <div className='col-lg-4'></div>\r\n//                 </div>\r\n//                 <div className='row'>\r\n//                     <div className='col-lg-3'></div>\r\n//                     <div className='col-lg-6 text-center mt-3 bg-light p-2'>\r\n//                         <h1>KGM Admission Test</h1>\r\n//                     </div>\r\n//                     <div className='col-lg-3'></div>\r\n//                 </div>\r\n//                 <div className='container mt-4'>\r\n//                     {\r\n//                         question.map((value,index)=>{\r\n//                             return (\r\n//                                 <div className='row'>\r\n//                                     <div className='col-lg-12 mt-5'>\r\n//                                         <h5>{value.text}</h5>\r\n//                                         <div className='row'>\r\n//                                             <input type=\"radio\" className='check' /> \r\n//                                             <p className='mt-3 ml-2'>{value.options.answer1}</p> \r\n//                                         </div>\r\n//                                         <div className='row'>\r\n//                                         <input type=\"radio\" className='check'/>\r\n//                                         <p className='mt-3 ml-2'>{value.options.answer2}</p>\r\n//                                         </div>\r\n//                                         <div className='row'>\r\n//                                         <input type=\"radio\" className='check'/>\r\n//                                         <p className='mt-3 ml-2'>{value.options.answer3}</p>\r\n//                                         </div>\r\n//                                         <div className='row'>\r\n//                                         <input type=\"radio\" className='check'/>\r\n//                                         <p className='mt-3 ml-2'>{value.options.answer4}</p>\r\n//                                         </div>\r\n//                                         <li onClick={() => optionClick(value.options.isCorrect)} key={value.options.id}>{value.options.text}</li>\r\n//                                     </div>\r\n//                                     {/* <div className='question'>\r\n//                                         <h3>Question {CurrentQuestion + 1} out of {question.length} </h3>\r\n//                                         <h1 className='question-text mt-3'>{question[CurrentQuestion].text}</h1>\r\n                                    \r\n\r\n//                                         <ul>\r\n//                                             {question[CurrentQuestion].options.map((options) => {\r\n//                                                 return (\r\n                                                \r\n\r\n//                                                         <li onClick={() => optionClick(options.isCorrect)} key={options.id}>{options.text}</li>\r\n                                                    \r\n//                                                 )\r\n//                                             })}\r\n//                                         </ul>\r\n                                        \r\n\r\n//                                     </div> */}\r\n//                                 </div>\r\n//                             );\r\n//                         })\r\n\r\n//                     }\r\n//                     <div className='row'>\r\n//                         <div className='col-lg-10'></div>\r\n//                         <div className='col-lg-2'>\r\n//                             <button type='submit' className='btn btn-danger col-lg-12' value='submit' name='submit'>Submit</button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n                \r\n                \r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\n// // import React, { useState } from 'react';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n// // import './add.css';\r\n// // import img from \"./micro-logo.png\";\r\n\r\n// // export default function Question() {\r\n\r\n// //     const [showFinalResult, setFinalResult] = useState(false);\r\n// //     const [score, setscore] = useState(0);\r\n// //     const [CurrentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n// //     const Question = [\r\n// //         {\r\n// //             text: \" What is the capital of India\",\r\n// //             options: [\r\n// //                 { id: 0, text: \"Chennai\", isCorrect: false },\r\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\r\n// //                 { id: 0, text: \"Suret\", isCorrect: false },\r\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\r\n// //             ],\r\n// //         },\r\n// //         {\r\n// //             text: \" What is the capital of southi\",\r\n// //             options: [\r\n// //                 { id: 0, text: \"1253\", isCorrect: false },\r\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\r\n// //                 { id: 0, text: \"4586\", isCorrect: false },\r\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\r\n// //             ],\r\n// //         },\r\n// //         {\r\n// //             text: \" What is the capital of Tamil Nadu\",\r\n// //             options: [\r\n// //                 { id: 0, text: \"Chennai\", isCorrect: false },\r\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\r\n// //                 { id: 0, text: \"Suret\", isCorrect: false },\r\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\r\n// //             ],\r\n// //         },\r\n// //         {\r\n// //             text: \" What is the capital of Kerala\",\r\n// //             options: [\r\n// //                 { id: 0, text: \"Chennai\", isCorrect: false },\r\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\r\n// //                 { id: 0, text: \"Suret\", isCorrect: false },\r\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\r\n// //             ],\r\n// //         },\r\n// //         {\r\n// //             text: \" What is the capital of India\",\r\n// //             options: [\r\n// //                 { id: 0, text: \"Chennai\", isCorrect: false },\r\n// //                 { id: 0, text: \"Delhi\", isCorrect: true },\r\n// //                 { id: 0, text: \"Suret\", isCorrect: false },\r\n// //                 { id: 0, text: \"Kenya\", isCorrect: false },\r\n// //             ],\r\n// //         },\r\n// //     ];\r\n\r\n// //     const optionClick = (isCorrect) => {\r\n// //         console.log(isCorrect);\r\n// //         if (isCorrect) {\r\n// //             setscore(score + 35);\r\n// //         }\r\n\r\n// //         if (CurrentQuestion + 1 < Question.length) {\r\n// //             setCurrentQuestion(CurrentQuestion + 1);\r\n// //         }\r\n// //         else {\r\n// //             setFinalResult(true);\r\n// //         }\r\n// //     }\r\n// //     const restaartassesment = () => {\r\n// //         setscore(0);\r\n// //         setCurrentQuestion(0);\r\n// //         setFinalResult(false);\r\n// //     }\r\n// //     return (\r\n// //         <>\r\n// //         <div className='container-fluid mt-3'>\r\n// //                 <div className='row'>\r\n// //                     <div className='col-lg-3'>\r\n// //                         <img src={img} className='col-lg-12' />\r\n// //                     </div>\r\n// //                     <div className='col-lg-5'></div>\r\n// //                     <div className='col-lg-4'></div>\r\n// //                 </div>\r\n// //                 <div className='row'>\r\n// //                     <div className='col-lg-3'></div>\r\n// //                     <div className='col-lg-6 text-center mt-3 bg-light p-2'>\r\n// //                         <h1>KGM Admission Test</h1>\r\n// //                     </div>\r\n// //                     <div className='col-lg-3'></div>\r\n// //                 </div>\r\n                \r\n// //             <div className='container'>\r\n// //                 <div className=' App row '>\r\n// //                     <div className='col-lg-12'>\r\n// //                         <h2 className='mt-4'>Current Score: {score}</h2>\r\n\r\n// //                         {showFinalResult ? (\r\n\r\n// //                             <div className='final-result'>\r\n// //                                 <h1>Final Result</h1>\r\n// //                                 <h2>{score} out of {Question.length}  correct - ({(score / Question.length) * 100}%)</h2>\r\n// //                                 <button type='submit' onClick={() => restaartassesment()} className='btn btn-danger'>Restart Assesment</button>\r\n\r\n// //                             </div>\r\n// //                         ) : (\r\n                            \r\n// //                             <div className='question'>\r\n// //                                 <h3>Question {CurrentQuestion + 1} out of {Question.length} </h3>\r\n// //                                 <h1 className='question-text mt-3'>{Question[CurrentQuestion].text}</h1>\r\n                              \r\n\r\n// //                                 <ul>\r\n// //                                     {Question[CurrentQuestion].options.map((options) => {\r\n// //                                         return (\r\n                                          \r\n\r\n// //                                                 <li onClick={() => optionClick(options.isCorrect)} key={options.id}>{options.text}</li>\r\n                                            \r\n// //                                         )\r\n// //                                     })}\r\n// //                                 </ul>\r\n                                \r\n\r\n// //                             </div>\r\n\r\n// //                         )}\r\n// //                     </div>\r\n// //                 </div>\r\n// //             </div>\r\n// //             </div>\r\n// //         </>\r\n// //     )\r\n// // }\r\n \r\n\r\nimport React, {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport questionAPI from './question';\r\nimport QuestionBox from './components/QuestionBox';\r\nimport Result from './components/ResultBox';\r\n  \r\nclass Quiz extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questionBank: [],\r\n      score: 0,\r\n      responses: 0\r\n    };\r\n  }\r\n  \r\n  // Function to get question from ./question\r\n  getQuestions = () => {\r\n    questionAPI().then(question => {\r\n      this.setState({questionBank: question});\r\n    });\r\n  };\r\n  \r\n  // Set state back to default and call function\r\n  playAgain = () => {\r\n    this.getQuestions();\r\n    this.setState({score: 0, responses: 0});\r\n  };\r\n  \r\n  // Function to compute scores\r\n  computeAnswer = (answer, correctAns) => {\r\n    if (answer === correctAns) {\r\n      this.setState({\r\n        score: this.state.score + 1\r\n      });\r\n    }\r\n    this.setState({\r\n      responses: this.state.responses < 5\r\n        ? this.state.responses + 1\r\n        : 5\r\n    });\r\n  };\r\n  \r\n  // componentDidMount function to get question\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n  \r\n  render() {\r\n    return (<div className=\"container\">\r\n      <div className=\"title\">\r\n        QuizOn\r\n      </div>\r\n  \r\n      {this.state.questionBank.length > 0 && \r\n       this.state.responses < 5 && \r\n       this.state.questionBank.map(({question, answers,\r\n       correct, questionId}) => <QuestionBox question=\r\n       {question} options={answers} key={questionId}\r\n       selected={answer => this.computeAnswer(answer, correct)}/>)}\r\n  \r\n      {\r\n        this.state.responses === 5\r\n          ? (<Result score={this.state.score}\r\n            playAgain={this.playAgain}/>)\r\n          : null\r\n      }\r\n  \r\n    </div>)\r\n  }\r\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,WAAW,MAAM,YAAY;AACpC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,MAAM,MAAM,wBAAwB;AAAC;AAE5C,MAAMC,IAAI,SAASL,SAAS,CAAC;EAC3BM,WAAW,GAAG;IACZ,KAAK,EAAE;IAAC,KASVC,YAAY,GAAG,MAAM;MACnBL,WAAW,EAAE,CAACM,IAAI,CAACC,QAAQ,IAAI;QAC7B,IAAI,CAACC,QAAQ,CAAC;UAACC,YAAY,EAAEF;QAAQ,CAAC,CAAC;MACzC,CAAC,CAAC;IACJ,CAAC;IAAA,KAGDG,SAAS,GAAG,MAAM;MAChB,IAAI,CAACL,YAAY,EAAE;MACnB,IAAI,CAACG,QAAQ,CAAC;QAACG,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAC,CAAC,CAAC;IACzC,CAAC;IAAA,KAGDC,aAAa,GAAG,CAACC,MAAM,EAAEC,UAAU,KAAK;MACtC,IAAID,MAAM,KAAKC,UAAU,EAAE;QACzB,IAAI,CAACP,QAAQ,CAAC;UACZG,KAAK,EAAE,IAAI,CAACK,KAAK,CAACL,KAAK,GAAG;QAC5B,CAAC,CAAC;MACJ;MACA,IAAI,CAACH,QAAQ,CAAC;QACZI,SAAS,EAAE,IAAI,CAACI,KAAK,CAACJ,SAAS,GAAG,CAAC,GAC/B,IAAI,CAACI,KAAK,CAACJ,SAAS,GAAG,CAAC,GACxB;MACN,CAAC,CAAC;IACJ,CAAC;IAhCC,IAAI,CAACI,KAAK,GAAG;MACXP,YAAY,EAAE,EAAE;MAChBE,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE;IACb,CAAC;EACH;;EAEA;;EA2BA;EACAK,iBAAiB,GAAG;IAClB,IAAI,CAACZ,YAAY,EAAE;EACrB;EAEAa,MAAM,GAAG;IACP,oBAAQ;MAAK,SAAS,EAAC,WAAW;MAAA,wBAChC;QAAK,SAAS,EAAC,OAAO;QAAA,UAAC;MAEvB;QAAA;QAAA;QAAA;MAAA,QAAM,EAEL,IAAI,CAACF,KAAK,CAACP,YAAY,CAACU,MAAM,GAAG,CAAC,IAClC,IAAI,CAACH,KAAK,CAACJ,SAAS,GAAG,CAAC,IACxB,IAAI,CAACI,KAAK,CAACP,YAAY,CAACW,GAAG,CAAC;QAAA,IAAC;UAACb,QAAQ;UAAEc,OAAO;UAC/CC,OAAO;UAAEC;QAAU,CAAC;QAAA,oBAAK,QAAC,WAAW;UAAC,QAAQ,EAC7ChB,QAAS;UAAC,OAAO,EAAEc,OAAQ;UAC5B,QAAQ,EAAEP,MAAM,IAAI,IAAI,CAACD,aAAa,CAACC,MAAM,EAAEQ,OAAO;QAAE,GADtBC,UAAU;UAAA;UAAA;UAAA;QAAA,QACc;MAAA,EAAC,EAG1D,IAAI,CAACP,KAAK,CAACJ,SAAS,KAAK,CAAC,gBACrB,QAAC,MAAM;QAAC,KAAK,EAAE,IAAI,CAACI,KAAK,CAACL,KAAM;QACjC,SAAS,EAAE,IAAI,CAACD;MAAU;QAAA;QAAA;QAAA;MAAA,QAAE,GAC5B,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAGN;EACR;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}